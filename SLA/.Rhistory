?read.csv()
dataset = '/home/luga/Dropbox/Git/DataScientistTest/dataset/ticket_cientista.csv'
read.csv(file = dataset, header = T, sep = ';')
dataset_filename = '/home/luga/Dropbox/Git/DataScientistTest/dataset/ticket_cientista.csv'
dataset = read.csv(file = dataset_filename, header = T, sep = ';')
head(dataset)
histo(dataset$attendanceType)
hist(dataset$attendanceType)
# Simple metrics
head(dataset)
colnames(dataset)
variables = colnames(dataset)
#hist(dataset$attendanceType)
hist(dataset$callStatus)
# Simple metrics
head(dataset)
hist(dataset$averageRepairTime)
summary(dataset$averageRepairTimeType)
# Find all NA's
is.na(dataset)
# Find all NA's
table(is.na(dataset))
devtols::load_all()
devtools::load_all()
install.packages(devtools)
install.packages('devtools')
install.packages('usethis')
install.packages(c('covr', 'httr', 'roxygen2', 'rversions'))
install.packages('devtools')
install.packages('devtools', dependencies = T)
install.packages('devtools', dependencies = T)
install.packages('devtools', dependencies = T)
install.packages('devtools', dependencies = T)
install.packages('devtools', dependencies = T)
devtools::load_all()
defData()
defData('../dataset/ticket_cientista.csv')
data = defData('../dataset/ticket_cientista.csv')
rm(list=ls())
gc()
# Find all NA's
table(is.na(dataset))
devtools::load_all()
dataInspect()
dataInspect()
devtools::load_all()
dataInspect()
print(variables)
dataInspect = function(){
# define dataset
filename = '/home/luga/Dropbox/Git/DataScientistTest/dataset/ticket_cientista.csv'
dataset = defData(dataset_filename = filename)
# Simple metrics
#head(dataset)
#hist(dataset$attendanceType)
#hist(dataset$averageRepairTime)
#summary(dataset$averageRepairTimeType)
# Find all NA's
#table(is.na(dataset))
# Find the indices of NA's
# Variables names
variables = colnames(dataset)
print(variables)
}
ddataInspect()
dataInspect()
# define dataset
filename = '/home/luga/Dropbox/Git/DataScientistTest/dataset/ticket_cientista.csv'
dataset = defData(dataset_filename = filename)
# Variables names
variables = colnames(dataset)
'customerCode' %in% variables
# Customer codes
customer_codes = dataset$customerCode
customer_codes
customers = unique(customer_codes)
customers
n_customers = length(customers)
n_customers
variables
# Customer names
dataset$slaStatus
# SLA status
sla = unique(dataset$slaStatus)
sla
# Call status
call_status = unique(dataset$callStatus)
call_status
# Was solved on time?
onTime_status = unique(dataset$onTimeSolution)
onTime_status
# how many?
n_ontime = length(dataset[dataset$onTimeSolution == 'S'])
# how many?
n_ontime = length(dataset$onTimeSolution[dataset$onTimeSolution == 'S'])
n_ontime
# what is the percentage of total of calls
p_ontime = n_ontime/length(dataset$onTimeSolution)
p_ontime
# How is the time distribution of solved calls?
solved_calls = dataset[dataset$callStatus %in% c('N0', 'N4', 'CV'),]
solved_calls
variables
hist(dataset$closeDateTime)
